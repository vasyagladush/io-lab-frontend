/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: operations["read_root__get"];
  };
  "/users/login": {
    post: operations["login_users_login_post"];
  };
  "/users/": {
    /** Creates User with specified details */
    post: operations["create_user_users__post"];
  };
  "/users/current": {
    get: operations["get_current_user_users_current_get"];
  };
  "/users/all": {
    get: operations["get_all_users_users_all_get"];
  };
  "/users/{id}": {
    get: operations["get_user_users__id__get"];
    /** Allows modification of user. Password can be changed only by the user. */
    put: operations["modify_user_users__id__put"];
    /** Deletes User with database id */
    delete: operations["delete_user_users__id__delete"];
  };
  "/surveys/": {
    get: operations["get_all_surveys_surveys__get"];
    post: operations["create_survey_surveys__post"];
  };
  "/surveys/current": {
    get: operations["get_current_surveys_surveys_current_get"];
  };
  "/surveys/{id}": {
    get: operations["get_survey_surveys__id__get"];
  };
  "/surveys/{id}/report": {
    get: operations["get_report_surveys__id__report_get"];
  };
  "/grades/": {
    post: operations["create_grade_grades__post"];
  };
}

export interface components {
  schemas: {
    /**
     * GradeSchema
     * @example {
     *   "grade": 1,
     *   "survey_id": 1,
     *   "user_id": 1
     * }
     */
    GradeSchema: {
      /** Grade */
      grade: number;
      /** Surveyid */
      surveyId: number;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * SurveyPlusSchema
     * @example {
     *   "body": "Body",
     *   "title": "Title"
     * }
     */
    SurveyPlusSchema: {
      /** Title */
      title: string;
      /** Body */
      body: string;
      /**
       * Startat
       * Format: date-time
       */
      startAt: string;
      /**
       * Finishesat
       * Format: date-time
       */
      finishesAt: string;
      /** Id */
      id: number;
    };
    /**
     * SurveySchema
     * @example {
     *   "body": "Body",
     *   "title": "Title"
     * }
     */
    SurveySchema: {
      /** Title */
      title: string;
      /** Body */
      body: string;
      /**
       * Startat
       * Format: date-time
       */
      startAt: string;
      /**
       * Finishesat
       * Format: date-time
       */
      finishesAt: string;
    };
    /**
     * UserLoginCredentialsSchema
     * @example {
     *   "password": "password",
     *   "username": "user.name"
     * }
     */
    UserLoginCredentialsSchema: {
      /** Username */
      username: string;
      /** Password */
      password: string;
    };
    /** UserLoginResponseSchema */
    UserLoginResponseSchema: {
      /** Accesstoken */
      accessToken: string;
    };
    /** UserModSchema */
    UserModSchema: {
      /** Firstname */
      firstName?: Partial<string> & Partial<unknown>;
      /** Lastname */
      lastName?: Partial<string> & Partial<unknown>;
      /** Username */
      username?: Partial<string> & Partial<unknown>;
      /** Password */
      password?: Partial<string> & Partial<unknown>;
      /** Isadmin */
      isAdmin?: Partial<boolean> & Partial<unknown>;
    };
    /** UserPlusSchema */
    UserPlusSchema: {
      /** Id */
      id: number;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Username */
      username: string;
      /** Isadmin */
      isAdmin: boolean;
    };
    /**
     * UserSchema
     * @example {
     *   "firstName": "Name",
     *   "lastName": "Surname",
     *   "username": "user.name"
     * }
     */
    UserSchema: {
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Username */
      username: string;
      /** Isadmin */
      isAdmin: boolean;
    };
    /**
     * UserSignUpSchema
     * @example {
     *   "firstName": "Name",
     *   "lastName": "Surname",
     *   "password": "password",
     *   "username": "user.name"
     * }
     */
    UserSignUpSchema: {
      /** Username */
      username: string;
      /** Password */
      password: string;
      /** Firstname */
      firstName: string;
      /** Lastname */
      lastName: string;
      /** Isadmin */
      isAdmin: boolean;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (Partial<string> & Partial<number>)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
}

export interface operations {
  read_root__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  login_users_login_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserLoginResponseSchema"];
        };
      };
      /** Incorrect username or password */
      401: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserLoginCredentialsSchema"];
      };
    };
  };
  /** Creates User with specified details */
  create_user_users__post: {
    responses: {
      /** Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** User with the provided username already exists */
      409: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserSignUpSchema"];
      };
    };
  };
  get_current_user_users_current_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPlusSchema"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** No user found */
      404: unknown;
    };
  };
  get_all_users_users_all_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPlusSchema"][];
        };
      };
      /** Unauthorized */
      401: unknown;
    };
  };
  get_user_users__id__get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserPlusSchema"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** No user found */
      404: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Allows modification of user. Password can be changed only by the user. */
  modify_user_users__id__put: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      204: never;
      /** User does not exist */
      400: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserModSchema"];
      };
    };
  };
  /** Deletes User with database id */
  delete_user_users__id__delete: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      204: never;
      /** User does not exist */
      400: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_all_surveys_surveys__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SurveyPlusSchema"][];
        };
      };
    };
  };
  create_survey_surveys__post: {
    parameters: {
      query: {
        response_model?: unknown;
      };
    };
    responses: {
      /** Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["SurveyPlusSchema"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveySchema"];
      };
    };
  };
  get_current_surveys_surveys_current_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SurveyPlusSchema"][];
        };
      };
    };
  };
  get_survey_surveys__id__get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SurveyPlusSchema"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_report_surveys__id__report_get: {
    parameters: {
      path: {
        id: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Unauthorized */
      401: unknown;
      /** No survey found */
      404: unknown;
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_grade_grades__post: {
    responses: {
      /** Successful Response */
      201: {
        content: {
          "application/json": unknown;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GradeSchema"];
      };
    };
  };
}

export interface external {}
